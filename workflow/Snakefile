snakemake.utils.min_version("6.3")


# configfile: "config.yml" # should now be loaded via "--configfile" flag
include: "rules/common.smk"
# include: "rules/install.smk" # no longer needed with update MOSAIC v1.3.9?
include: "rules/simulate.smk"
include: "rules/la_and_vcf.smk"
include: "rules/genotype_error.smk"
include: "rules/phasing.smk"
include: "rules/analysis.smk"
include: "rules/diagnostic_plots.smk"
include: "rules/reports.smk"


wildcard_constraints:
	anal_name="\w+",
	asc_name="\w+",
	sim_name="\w+",

report: "report/workflow.rst"

rule all:
	input:
		diag_coal=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pop_coal_time.png"
			for u in units.itertuples()
		],
		diag_fst=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pairwise_Fst.png"
			for u in units.itertuples()
		],
		diag_qq=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/qq.png"
			for u in units.itertuples()
		],

		R2_anc=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.ancestry.tsv"
			for u in units.itertuples()
		],
		R2_ind=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.individuals.tsv"
			for u in units.itertuples()
		],
		Q_RMSD=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/Q_RMSD.tsv"
			for u in units.itertuples()
		],
		
		R2="results/reports/R2_report.txt",
		Q="results/reports/Q_report.txt",
		QQ_bmix="results/reports/QQ.bmix.txt",
		QQ_rfmix="results/reports/QQ.rfmix.txt",
		QQ_mosaic="results/reports/QQ.mosaic.txt",


rule just_sim:
	input:
		sim=[
			f"results/{u.model_name}/{u.sim_name}/full.tsz" for u in units.itertuples()
		],


rule just_ascertain:
	input:
		asc=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/ascertained.tsz"	for u in units.itertuples()
		],


rule just_bmix:
	input:
		[f'results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/bmix/bmix.anc.vcf.gz' for u in units.itertuples()],


rule diagnostic_plots:
	input:
		pop_coal_time=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pop_coal_time.png"
			for u in units.itertuples()
		],
		pairwise_Fst=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pairwise_Fst.png"
			for u in units.itertuples()
		],
		true_local_ancestry=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/true_local_ancestry.png"
			for u in units.itertuples()
		],
		ancestry_dosage=[
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/ancestry_dosage.0.bmix.pdf"
			for u in units.itertuples()
		]
