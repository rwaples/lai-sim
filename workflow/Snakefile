snakemake.utils.min_version("6.3")
wildcard_constraints:
	anal_name = "\w+",
	asc_name = "\w+",
	sim_name = "\w+",
	model_name = "\w+",
	method = "\w+",

# configfile: "config.yml" # should now be loaded via "--configfile" flag
include: "rules/common.smk"
# include: "rules/install.smk" # no longer needed with update MOSAIC v1.3.9?
include: "rules/simulate.smk"
include: "rules/la_and_vcf.smk"
include: "rules/analyze.smk"
include: "rules/evaluate.smk"
include: "rules/report.smk"
include: "rules/plot.smk"


report: "report/workflow.rst"


rule all:
	input:
		diag_coal = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pop_coal_time.png"
			for u in units.itertuples()
		],
		diag_fst = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pairwise_Fst.png"
			for u in units.itertuples()
		],
		diag_qq = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/qq.png"
			for u in units.itertuples()
		],

		# R2_anc = [
		# 	f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.ancestry.tsv"
		# 	for u in units.itertuples()
		# ],
		# R2_ind = [
		# 	f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.individuals.tsv"
		# 	for u in units.itertuples()
		# ],
		# Q_RMSD = [
		# 	f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/Q_RMSD.tsv"
		# 	for u in units.itertuples()
		# ],

		temp1 = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.bmix.ancestry.tsv"
			for u in units.itertuples()
		],

		temp2 = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.mosaic.ancestry.tsv"
			for u in units.itertuples()
		],

		temp3 = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.rfmix2.ancestry.tsv"
			for u in units.itertuples()
		],

		temp4 = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/RMSD.bmix.tsv"
			for u in units.itertuples()
		],


rule do_R2_report:
	input:
		#R2 = "results/reports/R2_report.txt",
		temp4 = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_report.txt"
			for u in units.itertuples()
		],


rule reports:
	input:
		R2 = "results/reports/R2_report.txt",
		Q = "results/reports/Q_report.txt",
		QQ_bmix = "results/reports/QQ.bmix.txt",
		QQ_rfmix = "results/reports/QQ.rfmix.txt",
		QQ_mosaic = "results/reports/QQ.mosaic.txt",


rule just_sim:
	input:
		sim = [
			f"results/{u.model_name}/{u.sim_name}/full.tsz" for u in units.itertuples()
		],


rule just_ascertain:
	input:
		asc = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/ascertained.tsz" for u in units.itertuples()
		],


rule just_bmix:
	input:
		bmix = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/SUMMARY/R2_score.bmix.ancestry.tsv"
			for u in units.itertuples()
		],
		# QQ_bmix = "results/reports/QQ.bmix.txt",


rule diagnostic_plots:
	input:
		pop_coal_time = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pop_coal_time.png"
			for u in units.itertuples()
		],
		pairwise_Fst = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/pairwise_Fst.png"
			for u in units.itertuples()
		],
		true_local_ancestry = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/true_local_ancestry.png"
			for u in units.itertuples()
		],
		ancestry_dosage = [
			f"results/{u.model_name}/{u.sim_name}/{u.asc_name}/{u.anal_name}/DIAGNOSTICS/ancestry_dosage.0.bmix.pdf"
			for u in units.itertuples()
		]
